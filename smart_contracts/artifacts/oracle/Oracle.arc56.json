{
    "name": "Oracle",
    "structs": {},
    "methods": [
        {
            "name": "createApplication",
            "args": [],
            "returns": {
                "type": "void",
                "desc": "void"
            },
            "actions": {
                "create": [
                    "NoOp"
                ],
                "call": []
            },
            "readonly": false,
            "desc": "Initialize the contract with default values",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "requestData",
            "args": [
                {
                    "type": "pay",
                    "name": "payment",
                    "desc": "Payment transaction for the request"
                },
                {
                    "type": "string",
                    "name": "pair",
                    "desc": "The trading pair to request data for"
                },
                {
                    "type": "asset",
                    "name": "callbackApp",
                    "desc": "Asset ID of the callback application"
                },
                {
                    "type": "string",
                    "name": "callbackMethod",
                    "desc": "Name of the callback method"
                }
            ],
            "returns": {
                "type": "void",
                "desc": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "OptIn"
                ]
            },
            "readonly": false,
            "desc": "Request data from the oracle",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "optInToApplication",
            "args": [],
            "returns": {
                "type": "void",
                "desc": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "OptIn"
                ]
            },
            "readonly": false,
            "desc": "Opt in to the oracle application",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "setWhitelist",
            "args": [
                {
                    "type": "account",
                    "name": "account",
                    "desc": "The account to modify whitelist status for"
                },
                {
                    "type": "bool",
                    "name": "status",
                    "desc": "True to whitelist, false to remove from whitelist"
                }
            ],
            "returns": {
                "type": "void",
                "desc": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "desc": "Set whitelist status for an account",
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "desc": "Oracle contract for handling data requests and whitelisting",
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 1,
                "bytes": 2
            },
            "local": {
                "ints": 1,
                "bytes": 0
            }
        },
        "keys": {
            "global": {
                "admin": {
                    "keyType": "AVMString",
                    "valueType": "AVMBytes",
                    "key": "YWRtaW4="
                },
                "watcher": {
                    "keyType": "AVMString",
                    "valueType": "AVMBytes",
                    "key": "d2F0Y2hlcg=="
                },
                "fee": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "ZmVl"
                }
            },
            "local": {
                "isWhitelisted": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "aXNXaGl0ZWxpc3RlZA=="
                }
            },
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        305
                    ],
                    "errorMessage": "Account must opt in to contract first"
                },
                {
                    "pc": [
                        86,
                        163
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        110,
                        123
                    ],
                    "errorMessage": "OnCompletion is not OptIn"
                },
                {
                    "pc": [
                        299
                    ],
                    "errorMessage": "Only admin can modify whitelist status"
                },
                {
                    "pc": [
                        200
                    ],
                    "errorMessage": "Sender not whitelisted"
                },
                {
                    "pc": [
                        234
                    ],
                    "errorMessage": "assert target is match for conditions"
                },
                {
                    "pc": [
                        167
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        89,
                        113,
                        126
                    ],
                    "errorMessage": "can only call when not creating"
                },
                {
                    "pc": [
                        228,
                        245,
                        297
                    ],
                    "errorMessage": "check GlobalState exists"
                },
                {
                    "pc": [
                        199
                    ],
                    "errorMessage": "check LocalState exists"
                },
                {
                    "pc": [
                        136
                    ],
                    "errorMessage": "transaction type is pay"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "byteCode": {
        "approval": "CiADAQDoByYEDWlzV2hpdGVsaXN0ZWQFYWRtaW4Hd2F0Y2hlcgNmZWUxG0EAI4IEBLhEezYESED+AAQBo6P/BGjoQh02GgCOBABPACYAGQACI0MxGRREMRhENhoBF8AcNhoCI1OIALkiQzEZIhJEMRhEiACjIkMxGSISRDEYRDEWIglJOBAiEkQ2GgFXAgA2GgIXwDA2GgNXAgCIACEiQzEZFEQxGBREiAACIkOKAAApMgpnKjIKZyuBwIQ9Z4mKBAAxACMoY0REi/w4ADEAEkEAQYv8OAcyChJBADeL/DgIIytlRA9BACsiRIv8OAgkCbEjKmVEgA5vcmFjbGUtcmVxdWVzdLIFsgeyCCKyECSyAbOJI0L/0ooAADEAKCJmiYoCADEAIyllRBJEi/4yCGFEi/4oi/9miQ==",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 4,
            "minor": 2,
            "patch": 1
        }
    },
    "events": [],
    "templateVariables": {}
}